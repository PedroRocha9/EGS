{"ast":null,"code":"var _jsxFileName = \"/home/joao/Documents/Universidade/4ano/2\\xBAsemestre/EGS/authapp/src/Open.js\";\nimport google from './images/google.png';\nimport github from './images/github.png';\nimport './open.css';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport Thx from './Thx.js';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Open() {\n  // function to use axios to make a post with the data that the user has inputed\n  const postData = () => {\n    axios.post('http://localhost:5000/loginSubmit', {\n      // get info from input\n      username: document.getElementById('fname').value,\n      password: document.getElementById('password').value\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      console.log(response);\n      if (response.status == 200) {\n        success();\n        // delay redirect\n        setTimeout(redirect, 2000);\n      }\n    }).catch(function (error) {\n      console.log(\"errooo\" + error);\n      console.log(error.status);\n      error();\n    });\n  };\n  // function to redirect to google auth\n  const googleAuth = () => {\n    window.location.href = 'http://127.0.0.1:5000';\n  };\n  const twitterAuth = () => {\n    // go to Thx.js\n    // url_for('github_login')\n    window.location.href = 'http://127.0.0.1:5000/github';\n  };\n  const redirect = () => {\n    window.location.href = 'http://127.0.0.1:3000/thx';\n  };\n  const error = () => toast.error(\"Wrong username or password\");\n  const success = () => toast.success(\"You have successfully registered\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"header\",\n        children: \"Mixit Authentication Service\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"fname\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"fname\",\n        name: \"firstname\",\n        placeholder: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"lname\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        name: \"lastname\",\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"LoginRegisto\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Login_button\",\n          onClick: postData,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/Register\",\n          className: \"twitter_auth\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Registo\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Auth_button\",\n        onClick: googleAuth,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: google,\n          alt: \"google\",\n          className: \"google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttontittle\",\n          children: \"Sign in with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Auth_button\",\n        onClick: twitterAuth,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: github,\n          alt: \"twitter\",\n          className: \"twitter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttontittle\",\n          children: \"Sign in with Github\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 7\n  }, this);\n}\n_c = Open;\nexport default Open;\nvar _c;\n$RefreshReg$(_c, \"Open\");","map":{"version":3,"names":["google","github","axios","BrowserRouter","Router","Routes","Route","Link","Thx","ToastContainer","toast","jsxDEV","_jsxDEV","Open","postData","post","username","document","getElementById","value","password","headers","then","response","console","log","status","success","setTimeout","redirect","catch","error","googleAuth","window","location","href","twitterAuth","className","children","fileName","_jsxFileName","lineNumber","columnNumber","for","type","id","name","placeholder","onClick","to","src","alt","_c","$RefreshReg$"],"sources":["/home/joao/Documents/Universidade/4ano/2Âºsemestre/EGS/authapp/src/Open.js"],"sourcesContent":["import google from './images/google.png';\nimport github from './images/github.png';\nimport './open.css';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport Thx from './Thx.js';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction Open(){\n        // function to use axios to make a post with the data that the user has inputed\n        const postData = () => {\n          axios.post('http://localhost:5000/loginSubmit', {\n            // get info from input\n            username: document.getElementById('fname').value,\n            password: document.getElementById('password').value\n            }, {\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          })\n          .then(function (response) {\n            console.log(response);\n            if(response.status == 200){\n              success();\n              // delay redirect\n              setTimeout(redirect, 2000);\n            }\n            \n          }\n          )\n          .catch(function (error) {\n            console.log(\"errooo\"+error);\n            console.log(error.status)\n\n\n\n            error();\n          }\n          );\n        }\n        // function to redirect to google auth\n        const googleAuth = () => {\n          window.location.href = 'http://127.0.0.1:5000';\n        }\n        const twitterAuth = () => {\n          // go to Thx.js\n          // url_for('github_login')\n          window.location.href = 'http://127.0.0.1:5000/github';\n        }\n\n        const redirect = () => {\n          window.location.href = 'http://127.0.0.1:3000/thx';\n        }\n        const error = () => toast.error(\"Wrong username or password\");\n        const success = () => toast.success(\"You have successfully registered\");\n    return (\n      <div className=\"App\">\n        <ToastContainer />\n        <div className='box'>\n            <h1 className='header'>Mixit Authentication Service</h1>\n            <label for=\"fname\"></label>\n            <input type=\"text\" id=\"fname\" name=\"firstname\" placeholder=\"Username\"></input>\n            <label for=\"lname\"></label>\n            <input type=\"password\" id=\"password\" name=\"lastname\" placeholder=\"Password\"></input>\n            <div className='LoginRegisto'>\n              <div className='Login_button'onClick={postData}>Login</div>\n              <Link to='/Register' className='twitter_auth'>\n              <div className='Registo'>Register</div>\n              </Link>\n            </div>  \n            <div className='Auth_button'onClick={googleAuth}>\n              <img src={google} alt='google' className='google'/>\n              <div className='buttontittle'>Sign in with Google</div>\n            </div>\n            <div className='Auth_button' onClick={twitterAuth}>\n              \n                <img src={github} alt='twitter' className='twitter'/>\n                <div className='buttontittle'>Sign in with Github</div>\n            </div>\n        </div>\n        \n      </div>\n    );\n}\n\nexport default Open;"],"mappings":";AAAA,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAO,YAAY;AACnB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,IAAI,QAAQ,kBAAkB;AAC/E,OAAOC,GAAG,MAAM,UAAU;AAC1B,SAASC,cAAc,EAAEC,KAAK,QAAQ,gBAAgB;AACtD,OAAO,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,IAAIA,CAAA,EAAE;EACP;EACA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;IACrBZ,KAAK,CAACa,IAAI,CAAC,mCAAmC,EAAE;MAC9C;MACAC,QAAQ,EAAEC,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC,CAACC,KAAK;MAChDC,QAAQ,EAAEH,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACC;IAC9C,CAAC,EAAE;MACHE,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC,CACDC,IAAI,CAAC,UAAUC,QAAQ,EAAE;MACxBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrB,IAAGA,QAAQ,CAACG,MAAM,IAAI,GAAG,EAAC;QACxBC,OAAO,EAAE;QACT;QACAC,UAAU,CAACC,QAAQ,EAAE,IAAI,CAAC;MAC5B;IAEF,CAAC,CACA,CACAC,KAAK,CAAC,UAAUC,KAAK,EAAE;MACtBP,OAAO,CAACC,GAAG,CAAC,QAAQ,GAACM,KAAK,CAAC;MAC3BP,OAAO,CAACC,GAAG,CAACM,KAAK,CAACL,MAAM,CAAC;MAIzBK,KAAK,EAAE;IACT,CAAC,CACA;EACH,CAAC;EACD;EACA,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvBC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,uBAAuB;EAChD,CAAC;EACD,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB;IACA;IACAH,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,8BAA8B;EACvD,CAAC;EAED,MAAMN,QAAQ,GAAGA,CAAA,KAAM;IACrBI,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,2BAA2B;EACpD,CAAC;EACD,MAAMJ,KAAK,GAAGA,CAAA,KAAMrB,KAAK,CAACqB,KAAK,CAAC,4BAA4B,CAAC;EAC7D,MAAMJ,OAAO,GAAGA,CAAA,KAAMjB,KAAK,CAACiB,OAAO,CAAC,kCAAkC,CAAC;EAC3E,oBACEf,OAAA;IAAKyB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB1B,OAAA,CAACH,cAAc;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAClB9B,OAAA;MAAKyB,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAChB1B,OAAA;QAAIyB,SAAS,EAAC,QAAQ;QAAAC,QAAA,EAAC;MAA4B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACxD9B,OAAA;QAAO+B,GAAG,EAAC;MAAO;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eAC3B9B,OAAA;QAAOgC,IAAI,EAAC,MAAM;QAACC,EAAE,EAAC,OAAO;QAACC,IAAI,EAAC,WAAW;QAACC,WAAW,EAAC;MAAU;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eAC9E9B,OAAA;QAAO+B,GAAG,EAAC;MAAO;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eAC3B9B,OAAA;QAAOgC,IAAI,EAAC,UAAU;QAACC,EAAE,EAAC,UAAU;QAACC,IAAI,EAAC,UAAU;QAACC,WAAW,EAAC;MAAU;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eACpF9B,OAAA;QAAKyB,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3B1B,OAAA;UAAKyB,SAAS,EAAC,cAAc;UAAAW,OAAO,EAAElC,QAAS;UAAAwB,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eAC3D9B,OAAA,CAACL,IAAI;UAAC0C,EAAE,EAAC,WAAW;UAACZ,SAAS,EAAC,cAAc;UAAAC,QAAA,eAC7C1B,OAAA;YAAKyB,SAAS,EAAC,SAAS;YAAAC,QAAA,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAM;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAChC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACH,eACN9B,OAAA;QAAKyB,SAAS,EAAC,aAAa;QAAAW,OAAO,EAAEhB,UAAW;QAAAM,QAAA,gBAC9C1B,OAAA;UAAKsC,GAAG,EAAElD,MAAO;UAACmD,GAAG,EAAC,QAAQ;UAACd,SAAS,EAAC;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAE,eACnD9B,OAAA;UAAKyB,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAC;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACnD,eACN9B,OAAA;QAAKyB,SAAS,EAAC,aAAa;QAACW,OAAO,EAAEZ,WAAY;QAAAE,QAAA,gBAE9C1B,OAAA;UAAKsC,GAAG,EAAEjD,MAAO;UAACkD,GAAG,EAAC,SAAS;UAACd,SAAS,EAAC;QAAS;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAE,eACrD9B,OAAA;UAAKyB,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAC;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACrD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEF;AAEZ;AAACU,EAAA,GA3EQvC,IAAI;AA6Eb,eAAeA,IAAI;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}